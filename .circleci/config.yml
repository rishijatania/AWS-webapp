version: 2.1

parameters:
  image-tag:
    type: string
    default: $DB_NAME_1

executors:
  node-mysql-image: # declares a reusable executor
    working_directory: ~/webapp/api # directory where steps will run
    docker: 
      - image: circleci/node:11.1.0 # the primary container, where your job's commands are run
        environment:
          APP: dev
          PORT: 3000
          DB_DIALECT: mysql
          DB_HOST: 127.0.0.1
          DB_PORT: 3306
          DB_NAME: << pipeline.parameters.image-tag >>
          DB_USER: root
          DB_PSWD: password
      - image: circleci/mysql:8.0.15
        environment:
          MYSQL_ROOT_PASSWORD: password
          MYSQL_DATABASE: cloud_comp
          MYSQL_USER: admin

commands:
  install-run-npm:
    steps:
      - run: 
          name: Print
          command: echo ${DB_NAME}
      - run:
          name: update-npm
          command: 'sudo npm install -g npm@latest'
      - restore_cache: # special step to restore the dependency cache
          # Read about caching dependencies: https://circleci.com/docs/2.0/caching/
          key: dependency-cache-{{ checksum "package-lock.json" }}
      - run:
          name: install-npm-dependency
          command: npm install
      - save_cache: # special step to save the dependency cache
          key: dependency-cache-{{ checksum "package-lock.json" }}
          paths:
            - ./node_modules
  db-wait:
    steps:    
      - run:
          # Our primary container isn't MYSQL so run a sleep command until it's ready.
          name: Waiting for MySQL to be ready
          command: |
            for i in `seq 1 10`;
            do
              nc -z 127.0.0.1 3306 && echo Success && exit 0
              echo -n .
              sleep 1
            done
            echo Failed waiting for MySQL && exit 1

  run-store-tests:
    steps:
      - run: # run tests
          name: test
          command: npm test
      - store_artifacts: # special step to save test results as as artifact
          # Upload test summary for display in Artifacts: https://circleci.com/docs/2.0/artifacts/ 
          path: test-results.xml
          prefix: tests
      - store_test_results: # for display in Test Summary: https://circleci.com/docs/2.0/collect-test-data/
          path: test-results.xml

jobs:
  pr_check:
    executor: node-mysql-image
    steps:
      - checkout:
          path: ~/webapp
      - install-run-npm
      - db-wait
      - run-store-tests

  build:
    executor: node-mysql-image
    steps:
      - checkout: # check out the code in the project directory
          path: ~/webapp
      - install-run-npm
      - db-wait
      - run-store-tests

workflows:
  pr-check:
    jobs:
      - pr_check:
          filters:
            branches:
              only: /^pull\/.*$/
  build_deploy:
    jobs:
      - build:
          filters:
            branches:
              only:
                - master
