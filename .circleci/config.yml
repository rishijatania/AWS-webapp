version: 2.1
jobs:
  pr_check:
    docker:
      - image: circleci/node:11.1.0 # the primary container, where your job's commands are run
      - image: circleci/mysql:8.0.15
    steps:
      - checkout
      - run:
          name: Gradle Build # run the `echo` command
          command: |
            echo "hello world"

  build:
    working_directory: ~/webapp/api # directory where steps will run
    docker: 
      - image: circleci/node:11.1.0 # the primary container, where your job's commands are run
      - image: circleci/mysql:8.0.15
        environment:
            MYSQL_ROOT_PASSWORD: rootpw
            MYSQL_DATABASE: test_db
            MYSQL_USER: user
            MYSQL_PASSWORD: passw0rd
    steps:
      - checkout: # check out the code in the project directory
          path: ~/webapp
      - run:
          # name: Gradle Build # run the `echo` command
          # command: |
          #   echo "hello world"
          name: update-npm
          command: 'sudo npm install -g npm@latest'
      - restore_cache: # special step to restore the dependency cache
          # Read about caching dependencies: https://circleci.com/docs/2.0/caching/
          key: dependency-cache-{{ checksum "package-lock.json" }}
      - run:
          name: install-npm-wee
          command: npm install
      - save_cache: # special step to save the dependency cache
          key: dependency-cache-{{ checksum "package-lock.json" }}
          paths:
            - ./node_modules
      - run: # run tests
          name: test
          command: npm test
      - store_artifacts: # special step to save test results as as artifact
          # Upload test summary for display in Artifacts: https://circleci.com/docs/2.0/artifacts/ 
          path: test-results.xml
          prefix: tests
      - store_test_results: # for display in Test Summary: https://circleci.com/docs/2.0/collect-test-data/
          path: test-results.xml 

workflows:
  pr-check:
    jobs:
      - pr_check
  build_deploy:
    jobs:
      - build:
          filters:
            branches:
              only:
                - master
